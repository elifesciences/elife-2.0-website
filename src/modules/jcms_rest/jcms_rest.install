<?php

/**
 * @file
 * Contains install and update functions for Journal CMS (REST).
 */
use Drupal\node\Entity\Node;

/**
 * Trigger notification for all podcast episodes so search can be re-indexed.
 */
function jcms_rest_update_8101() {
  $query = \Drupal::entityQuery('node')
    ->condition('type', 'podcast_episode');
  $nids = $query->execute();
  if ($nids) {
    $nodes = Node::loadMultiple($nids);
    if (!empty($nodes)) {
      foreach ($nodes as $node) {
        // We need to change at least one value, otherwise the changed timestamp
        // will not be updated.
        $node->changed = 0;
        $node->save();
      }
    }
  }
}

/**
 * Resave all nodes that need to presave processed output
 */
function jcms_rest_update_8102(&$sandbox) {
  
  if (!isset($sandbox['progress'])) {
    // This must be the first run. Initialize the sandbox.
    $sandbox['progress'] = 0;
    $sandbox['current_pk'] = 0;
    $query = \Drupal::entityQuery('node')
      ->condition('type', ['blog_article', 'event', 'interview', 'press_package', 'labs_experiment', 'person'], 'IN');
    $sandbox['max'] = $query->count()->execute() - 1;
  }
  
  // Update 20 nodes at a time.
  $query = \Drupal::entityQuery('node')
    ->condition('type', ['blog_article', 'event', 'interview', 'press_package', 'labs_experiment', 'person'], 'IN')
    ->condition('nid', $sandbox['current_pk'], '>')      
    ->range(0, 20)
    ->sort('nid', 'ASC');      
  $nids = $query->execute();
  if ($nids) {
    $nodes = Node::loadMultiple($nids);
    if (!empty($nodes)) {
      foreach ($nodes as $node) {
        $node->save();
        $sandbox['progress']++;
        $sandbox['current_pk'] = $node->id();
      }
    }
  }
  if (empty($sandbox['max']) ||  $sandbox['progress'] >= $sandbox['max']) {
     $sandbox['#finished'] = TRUE;
  }
  else {
    $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];
  }
}
